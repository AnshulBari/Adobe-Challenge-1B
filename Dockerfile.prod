# Production-optimized Dockerfile for Adobe Challenge 1B
# Multi-stage build for minimal image size and enhanced security

# Build stage
FROM python:3.11-slim as builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user --upgrade pip && \
    pip install --no-cache-dir --user -r requirements.txt

# Set environment for model downloads
ENV TRANSFORMERS_CACHE=/build/.cache
ENV HF_HOME=/build/.cache
ENV TORCH_HOME=/build/.cache

# Download models and NLTK data in build stage
RUN python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('all-MiniLM-L6-v2')" && \
    python -c "import nltk; nltk.download('punkt', quiet=True)"

# Production stage
FROM python:3.11-slim

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder /root/.local /home/appuser/.local
COPY --from=builder /build/.cache /home/appuser/.cache
COPY --from=builder /root/nltk_data /home/appuser/nltk_data

# Copy application code
COPY --chown=appuser:appuser . .

# Set environment variables
ENV PATH=/home/appuser/.local/bin:$PATH
ENV PYTHONPATH=/home/appuser/.local/lib/python3.11/site-packages
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV TRANSFORMERS_CACHE=/home/appuser/.cache
ENV HF_HOME=/home/appuser/.cache
ENV TORCH_HOME=/home/appuser/.cache
ENV NLTK_DATA=/home/appuser/nltk_data

# Create directories and set permissions
RUN mkdir -p /app/input /app/output /app/sample_documents && \
    chown -R appuser:appuser /app && \
    chmod +x cli.py

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; from document_intelligence import DocumentIntelligenceProcessor; sys.exit(0)"

# Volume mount points
VOLUME ["/app/input", "/app/output"]

# Default command
CMD ["python", "cli.py", "--help"]
